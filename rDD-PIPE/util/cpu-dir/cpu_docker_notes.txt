###############################################################
# Draft Dockerfile to build ChIA-PET Utilities (CPU)
# ChIA-PET Utilities provides modules with core data-processing 
# functionality for ChIA-PET data
# Based on "CentOS release 6.5 (Final)"
###############################################################

# Set the base image to CentOS6
FROM centos6.6

# File Author / Maintainer
MAINTAINER Daniel Capurso and Chee-Hong Wong

## Dependencies
# zlib v 1.2.8
# ChiaSigScaled v 19.4.17n
# git
# bwa       (Compiled during CPU make ??)
# BWT-SW    (Compiled during CPU make ??)


# Update the repository sources list
# Install base packages: git, python, wget, unzip, R
RUN yum update && yum install -y \
    git \
    curl \
    tar \
    unzip

## Download and compile zlib (v 1.2.8)
RUN curl -O https://www.zlib.net/fossils/zlib-1.2.8.tar.gz
RUN tar -xzvf zlib-1.2.8.tar.gz
RUN cd zlib-1.2.8 && ./configure && make 

## Download and compile Chiasig
RUN curl -O http://folk.uio.no/jonaspau/chiasig/ChiaSigCPPv093.zip
RUN unzip ChiaSigCPPv093.zip
RUN cd ChiaSigCPPv093 && make

## Compile CPU
#RUN cd cpu-dir && make





## Install pip and python packages: common, python-dateutils, python-magic 
#RUN easy_install pip
#RUN pip install common
#RUN pip install python-dateutil
#RUN pip install -U --no-deps MACS2
#RUN pip install python-magic

# Wget more tools 
#RUN wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bedClip
#RUN wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bedToBigBed
#RUN wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/bedGraphToBigWig

#RUN chmod 755 bedClip && mv bedClip /usr/bin/
#RUN chmod 755 bedToBigBed && mv bedToBigBed /usr/bin/
#RUN chmod 755 bedGraphToBigWig && mv bedGraphToBigWig /usr/bin/

#RUN mkdir /image_software
#WORKDIR /image_software

# Install bedtools 2.26.0
#RUN git clone --branch v2.26.0 https://github.com/arq5x/bedtools2.git
#RUN cd bedtools2 && make && make install



# Get ENCODE pipeline container repository
# This COPY asumes the build context is the root of the pipeline-container repo
# and it gets whatever is checked out plus local modifications
#RUN mkdir pipeline-container
#COPY / pipeline-container

# Set up the user directory
#RUN groupadd -r encode && useradd --no-log-init -r -m -d /home/encode/ -g encode encode
#USER encode
#WORKDIR /home/encode

#ENTRYPOINT ["python", "/image_software/pipeline-container/src/macs2.py"]